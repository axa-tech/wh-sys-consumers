global
    log         127.0.0.1 local2
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
#    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    30s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000
#    errorfile 400 /etc/haproxy/errors/400.http
#    errorfile 403 /etc/haproxy/errors/403.http
#    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
#    errorfile 502 /etc/haproxy/errors/502.http
#    errorfile 503 /etc/haproxy/errors/503.http
#    errorfile 504 /etc/haproxy/errors/504.http

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend  main *:80
	{# Definition des backend #}
	{% for domain in domains %}
		acl is is_{{ domain.backendname }}  hdr_end(host) -i {{ domain.fqdn }}
	{% endfor %}

	{% for domain in domains %}
                use_backend {{ domain.backendname }} if  is_{{ domain.backendname }}
        {% endfor %}
	
#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
{% for backend in backends %}
	backend {{ backend['name'] }}
	cookie SERVERID insert indirect
	balance    leastconn
	{% set i=0 %}
        {% for host  in backend.hosts %}
                server app{{ i }} {{ host.ip }}:{{ host.port  }} cookie app{{ i }} check
                {% set i  = i + 1 %}
        {% endfor %}
{% endfor %}


